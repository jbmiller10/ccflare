<roadmap name="enhancePromptInterceptorWithGitStatus" version="1.0">
<context>
This roadmap enhances the System Prompt Interceptor to support another dynamic block: the git status. The backend logic will be updated to extract this block from the original prompt and inject it into the user's template using a new `{{git_status_block}}` placeholder. The frontend will be updated to inform the user of this new capability, and the API's default state will be improved to provide a better starting template on first load or reset.
</context>
<risks_and_alternatives>
- **Risk:** The logic for finding the `gitStatus:` block assumes it starts with "gitStatus:" and extends to the end of the prompt section. If the client changes this format, the extraction logic will need to be updated.
- **Alternative Considered:** Instead of a simple string search, a more complex regex could be used to define the start and end of the git status block. This was rejected for now as the current format is simple, and a string search is more performant and less brittle than a complex regex for this specific case.
</risks_and_alternatives>
code
Code
<ticket id="BE-01" depends_on="ROOT" is_breaking_change="false">
    <title>BE: Enhance System Prompt Interceptor for Git Status</title>
    <description>
        This ticket enhances the backend for the System Prompt Interceptor. It adds logic to extract the dynamic `gitStatus:` block from main agent prompts and makes it available via a `{{git_status_block}}` placeholder. It also improves the default/reset state provided by the API to offer a better starting template for users.
    </description>
    <implementation_notes>
        This ticket has two parts that should be completed together.

        **Part A: Implement Core Interception Logic**
        1.  Open `packages/proxy/src/handlers/system-prompt-interceptor.ts`.
        2.  In the `applySystemPromptInterception` function, locate the logic that extracts the `envBlock`.
        3.  Immediately after that logic, add a new block to extract the git status information.
            -   The git status block starts with the literal string `gitStatus:` and continues to the end of the `instructionalPrompt` string.
            -   Find the start index of `"gitStatus:"`.
            -   If found, create a `gitStatusBlock` variable by taking the substring from that index to the end.
            -   If not found, `gitStatusBlock` should be an empty string.
        4.  Find the line where the `{{env_block}}` placeholder is replaced.
        5.  Add a new line immediately after it to replace the `{{git_status_block}}` placeholder with your `gitStatusBlock` variable.
            ```typescript
            let composedPrompt = config.replacementPrompt;
            composedPrompt = composedPrompt.replace("{{env_block}}", envBlock);
            composedPrompt = composedPrompt.replace("{{git_status_block}}", gitStatusBlock); // Add this line
            ```

        **Part B: Improve API Default State**
        1.  Open `packages/http-api/src/handlers/tools.ts`.
        2.  In the `getSystemPromptConfig` handler function, locate the `if (!config)` block. This block executes on first load or after a reset.
        3.  Define a constant for a default template, like: `const defaultTemplate = "You are a helpful assistant.\n\n---\n\n{{env_block}}\n\n{{git_status_block}}";`
        4.  Change the `replacementPrompt` in the returned JSON object from `lastSeenPrompt || ""` to your new `defaultTemplate`. The `targetPrompt` should remain as `lastSeenPrompt`.
    </implementation_notes>
    <files>
        <file path="packages/proxy/src/handlers/system-prompt-interceptor.ts" action="MODIFY">
            Update the `applySystemPromptInterception` function to extract the git status block from the instructional prompt and replace a new `{{git_status_block}}` placeholder in the user's template.
        </file>
        <file path="packages/http-api/src/handlers/tools.ts" action="MODIFY">
            In `getSystemPromptConfig`, update the default state provided when no configuration exists. The `replacementPrompt` should now be a helpful default template string containing both `{{env_block}}` and `{{git_status_block}}`, while `targetPrompt` remains the last seen prompt.
        </file>
    </files>
    <verification_steps>
        -   **Part A:**
            -   Enable the interceptor and set a template with `{{git_status_block}}`.
            -   Send a main agent request that includes a `gitStatus:` section.
            -   Verify the outgoing request to the Claude API contains your template text with the git status block correctly injected.
        -   **Part B:**
            -   Reset the interceptor config by calling `DELETE /api/tools/interceptors/system-prompt`.
            -   Call `GET /api/tools/interceptors/system-prompt`.
            -   Verify the `replacementPrompt` field in the response contains the new default template string.
    </verification_steps>
</ticket>

<ticket id="FE-01" depends_on="BE-01" is_breaking_change="false">
    <title>FE: Update Interceptor UI for Git Status Placeholder</title>
    <description>
        This ticket updates the helper text on the System Prompt Interceptor UI to inform users about the new `{{git_status_block}}` placeholder, ensuring they are aware of the full templating capabilities.
    </description>
    <implementation_notes>
        1.  Open `packages/dashboard-web/src/components/tools/SystemPromptInterceptorCard.tsx`.
        2.  Locate the `<p>` tag that serves as the helper text for the `Textarea`.
        3.  Update the text content to mention both placeholders. For example:
            -   **Old text:** "Use `{{env_block}}` to preserve the dynamic environment details from the original prompt."
            -   **New text:** "Use `{{env_block}}` and `{{git_status_block}}` to preserve dynamic content (e.g., environment, git status) from the original prompt."
    </implementation_notes>
    <files>
        <file path="packages/dashboard-web/src/components/tools/SystemPromptInterceptorCard.tsx" action="MODIFY">
            Update the helper text below the "Custom Prompt Template" textarea to include information about the new `{{git_status_block}}` placeholder.
        </file>
    </files>
    <verification_steps>
        -   Navigate to the `/tools` page in the dashboard.
        -   Verify that the helper text for the System Prompt Interceptor now mentions both `{{env_block}}` and `{{git_status_block}}`.
    </verification_steps>
</ticket>
</roadmap>